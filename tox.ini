;Environment, package and testing specifications for tox.

;Run this using 'tox -r --develop' from a non-conda environment that has tox installed

;Note that there is a well known bug that tox doesn't realize if the requirements.txt file has changed between runs. 
;See e.g. here https://tox.wiki/en/latest/example/general.html or here https://github.com/tox-dev/tox/issues/149
;To avoid any resulting bugs, always start tox using the '-r' flag, to force a rebuild of the virtual envs everytime.
;The '--develop' option is used so that tox doesn't try to install the package using pypi, which can't work as rescomp
;isn't on there yet, and instead runs 'pip install -e .' behind the scenes.

;VERY IMPORTANT: Do not have underscores in any of the environment names, for some reason tox can't deal with them!
;Also note that these names are not just names, but there is quite a bit of substitution and pattern matching going on.
;See the tox docs for more details.
[tox]
envlist =
;    pe-py36-current
    pe-py{37,38}-current
    pe-py{36,37,38,39}-current
    pe-py{36,37}-oldest-supported
    pe-py{38}-oldest-supported
    pe-py{39}-oldest-supported
    pe-py{36,37,38,39}-newest-supported
    pe-py{36,37,38,39}-cutting_edge
;    c-py36-current
    c-py{36,37,38,39}-current
    c-py{36,37}-oldest-supported
    c-py{38}-oldest-supported
    c-py{39}-oldest-supported
    c-py{36,37,38,39}-newest-supported
    c-py{36,37,38,39}-cutting_edge

;tox-conda and python interpreter notes:
;We use tox-conda (see below) to allow conda_deps and conda-spec to specify the packages that should be installed using
;conda, instead of pip. in the c-* environments
;Using that plugin changes the way that python versions are found by tox in a way that I frankly don't quite
;understand. Additionally you can't turn tox-conda on/off on and environment basis, only globally for the whole tox
;project (see https://github.com/tox-dev/tox-conda/issues/36), resulting in us needing to manually specify both the pip
;and the conda python interpreters we want to use below.
;As such, this tox.ini requires that python 3.6-3.9 are installed using pyenv in virtual environments called pe_tox_py36
;-pe_tox_py39 and again as conda environments called c_tox_py36-c_tox_py39.

;;Skip installation of the package to test, in this case rescomp
;skipsdist=True

[pe-common-deps]
deps =
    tox
    pytest

[pe-requirements-current]
deps =
    -Ur{toxinidir}{/}requirements.txt

[pe-requirements-oldest-supported]
deps =
    py36,p37: -Ur{toxinidir}{/}/env_specs/requirements_oldest_supported_py36_py37.txt
    py38: -Ur{toxinidir}{/}/env_specs/requirements_oldest_supported_py38.txt
    py39: -Ur{toxinidir}{/}/env_specs/requirements_oldest_supported_py39.txt

[pe-requirements-newest-supported]
deps =
    -Ur{toxinidir}{/}env_specs{/}requirements_newest_supported.txt

[pe-requirements-cutting-edge]
deps =
    -Ur{toxinidir}{/}env_specs{/}requirements_cutting_edge.txt

[c-common-deps]
deps =
    tox
    tox-conda

[c-common-conda-deps]
conda_deps =
    pytest

[c-requirements-current]
conda_spec =
    {toxinidir}{/}requirements.txt

[c-requirements-newest-supported]
conda_spec =
    {toxinidir}{/}env_specs{/}requirements_newest_supported.txt

[c-requirements-oldest-supported]
conda_spec =
    py36,p37: {toxinidir}{/}env_specs{/}requirements_oldest_supported_py36_py37.txt
    py38: {toxinidir}{/}env_specs{/}requirements_oldest_supported_py38.txt
    py39: {toxinidir}{/}env_specs{/}requirements_oldest_supported_py39.txt

[c-requirements-cutting-edge]
conda_spec =
    {toxinidir}{/}env_specs{/}requirements_cutting_edge.txt

[testenv:pe-py{36,37,38,39}-{current,oldest-supported,newest-supported,cutting-edge}]
basepython =
    py36: {homedir}{/}.pyenv{/}versions{/}pe_tox_py36{/}bin{/}python
    py37: {homedir}{/}.pyenv{/}versions{/}pe_tox_py37{/}bin{/}python
    py38: {homedir}{/}.pyenv{/}versions{/}pe_tox_py38{/}bin{/}python
    py39: {homedir}{/}.pyenv{/}versions{/}pe_tox_py39{/}bin{/}python
deps =
    {[pe-common-deps]deps}
    current: {[pe-requirements-current]deps}
    oldest-supported: {[pe-requirements-oldest-supported]deps}
    newest-supported: {[pe-requirements-newest-supported]deps}
    cutting-edge: {[pe-requirements-cutting-edge]deps}

[testenv:c-py{36,37,38,39}-{current,oldest-supported,newest-supported,cutting-edge}]
basepython =
    py36: {homedir}{/}anaconda3{/}envs{/}c_tox_py36{/}bin{/}python
    py37: {homedir}{/}anaconda3{/}envs{/}c_tox_py37{/}bin{/}python
    py38: {homedir}{/}anaconda3{/}envs{/}c_tox_py38{/}bin{/}python
    py39: {homedir}{/}anaconda3{/}envs{/}c_tox_py39{/}bin{/}python
deps =
    {[c-common-deps]deps}
conda_deps =
    {[c-common-conda-deps]conda_deps}
conda_spec =
    current: {[c-requirements-current]conda_spec}
    oldest-supported: {[c-requirements-oldest-supported]conda_spec}
    newest-supported: {[c-requirements-newest-supported]conda_spec}
    cutting-edge: {[c-requirements-newest-supported]conda_spec}

[testenv]
allowlist_externals =
    which
    type
    conda
    echo
;Specify the conda channels, and override the external user channels, so that they don't influence the test results
conda_channels =
    defaults
    conda-forge
conda_install_args =
    --override-channels
;run test commands
commands =
    which python
    python -V
;    which pip
;    pip -V
;    python -m pip -V
;    which tox
;    tox --version
;    which conda
;    conda -V
;    pip list
;    conda list
;    which pytest
;    python -m pytest -v --tb=no

